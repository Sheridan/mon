#!/bin/bash

debug="OFF"
use_clang="OFF"
verbose_build="OFF"
opt_root_path="/tmp/mon"
while getopts "dvchr:" opt
do
  case $opt in
    d)
      debug="ON"
      ;;
    c)
      use_clang="ON"
      ;;
    v)
      verbose_build="ON"
      ;;
    r)
      opt_root_path=${OPTARG}
      ;;
    h)
      echo "-d	Build debug"
      echo "-v	Verbode build"
      echo "-c	Build with clang"
      echo "-r=/root/path	Setting root path for install and build"
      echo "-h	This"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

. ./linux-environment "$opt_root_path"

current_path=$PWD
function run_cmd
{
  name=$1
  cmd=$2
  echo "--> $name ($cmd)"
  echo $cmd >> ${console_build_path}/commands
  $cmd
  if (($?>0))
  then
    exit 1
  fi
}

function build()
{
  path=$1
  object_build_path="$console_build_path/$path"
  echo "------------------- Building ${path} in ${object_build_path} -------------------"
  rm -rf ${object_build_path}
  object_path="$current_path/$path"
  mkdir -p $object_build_path
  cd $object_build_path
  run_cmd "CMake" "cmake -DCMAKE_INSTALL_PREFIX='$install_path' -DMON_VERBOSE_BUILD=$verbose_build -DBUILD_DEBUG=$debug -DMON_USE_CLANG=$use_clang  $object_path"
  run_cmd "make" "make -j$build_threads"
  run_cmd "install" "make install"
  cd $build_path
}

mkdir -p $console_build_path
mkdir -p $install_path
build "application"
build "sensors/cpu"
build "sensors/memory"
cd $current_path
